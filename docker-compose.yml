services:
  redis:
    image: "redis:latest"
    container_name: "redis"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - pluto-network

  redis-commander:
    image: "rediscommander/redis-commander:latest"
    container_name: "redis-commander"
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    restart: always
    networks:
      - pluto-network

  mongo:
    image: "mongo:latest"
    container_name: "mongo"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=auth
      - MONGO_INITDB_ROOT_PASSWORD=PLUTOpluto!23456
    restart: always
    volumes:
      - mongo_data:/data/db
    networks:
      - pluto-network

  mongo-express:
    image: "mongo-express:latest"
    container_name: "mongo-express"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=PLUTOpluto!23456
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=PLUTOpluto!23456
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    restart: always
    networks:
      - pluto-network

  pluto:
    build:
      context: .
      dockerfile: './Dockerfile'
    depends_on:
      - redis
      - mongo
    command: tail -f /dev/null
    restart: always
    networks:
      - pluto-network

volumes:
  redis_data: {}
  mongo_data: {}

networks:
  pluto-network:
    driver: bridge